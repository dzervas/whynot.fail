name: Hugo Build

on:
  push:
    branches:
    - master
  issues:
    types:
    - closed
    - deleted
    - edited
    - labeled
    - unlabeled
    - reopened

# We have several possible workflows:
# - Push to master (regular static site generator)
# - Label an issue as "published" by the repo owner
# - Edit an issue which is "published" by the repo owner

jobs:
  build:
    # To see available associations: https://developer.github.com/v4/enum/commentauthorassociation/
    # Be careful that if this is left too open, it could result in arbitrary file
    # upload, as the filename is directly derived from the issue title
    if: ${{ github.event_name != 'issues' || github.event.issue.author_association == 'owner' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - name: Setup NPM
        uses: actions/setup-node@v1
      - name: Install dependencies
        run: npm ci

      - name: Hugo setup
        uses: peaceiris/actions-hugo@v2
        with:
          extended: true

      # If the trigger came from and issue and:
      # - issue is open and
      # - has a "published" label or
      # - labeled as "published" and
      # - is either: edited, labeled or reopened
      # then, process it as a post
      - name: Publish issue post
        env:
          POST_AUTHOR: ${{ github.event.issue.user.login }}
          POST_BODY: ${{ github.event.issue.body }}
          POST_DATE: ${{ github.event.issue.created_at }}
          POST_LABELS: ${{ join(github.event.issue.labels.*.name, ',') }}
          POST_TITLE: ${{ github.event.issue.title }}
        run: ./.github/issue_parser.sh > "content/post/${POST_TITLE}.md"
        if: ${{ github.event_name == 'issues' && github.event.issue.state == 'open' && (contains(github.event.issue.labels.*.name, 'published') || github.event.label.name == 'published') && contains(fromJson('["edited", "labeled", "reopened"]'), github.event.action) }}

      # If the trigger came from and issue and:
      # - issue is not open or
      # - doesn't have a "published" label or
      # - unlabeled as "published" and
      # - is either: closed, unlabeled or deleted
      # then, remove the post
      - name: Delete issue post
        env:
          POST_BODY: ${{ github.event.issue.body }}
        run: rm "$(head -n 1 <<< ${POST_BODY} | cut -d, -f3)"
        if: ${{ github.event_name == 'issues' && (github.event.issue.state != 'open' || !contains(github.event.issue.labels.*.name, 'published') || github.event.label.name == 'published') && contains(fromJson('["closed", "deleted", "unlabeled"]'), github.event.action) }}

      - name: Build site
        run: hugo --minify --gc

      - name: Deploy to gh-pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          deploy_key: ${{secrets.ACTIONS_DEPLOY_KEY}}
          publish_branch: gh-pages
          publish_dir: ./public
          # This is needed as every time we rebuild we don't know which issues
          # are published and which not
          keep_files: true
