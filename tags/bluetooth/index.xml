<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Bluetooth on WhyNot.Fail</title><link>https://whynot.fail/tags/bluetooth/</link><description>Recent content in Bluetooth on WhyNot.Fail</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Wed, 27 May 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://whynot.fail/tags/bluetooth/index.xml" rel="self" type="application/rss+xml"/><item><title>Adding more magic to the Magicforce 68</title><link>https://whynot.fail/hardware/magicforce-68-reversing/</link><pubDate>Wed, 27 May 2020 00:00:00 +0000</pubDate><guid>https://whynot.fail/hardware/magicforce-68-reversing/</guid><description>&lt;p>This is a small journey on how I reverse engineered the &lt;a href="https://drop.com/buy/magicforce-68-key-mini-mechanical-keyboard">MagicForce 68&lt;/a> keyboard and tried to add bluetooth functionality to it. It’s a small keyboard (68 keys, 65%) and is USB-only (it’s not the smart model). It has a controller that I can’t flash with a custom firmware, so I had to hook wires on it.&lt;/p>
&lt;h1 id="the-hardware">The Hardware&lt;/h1>
&lt;p>The first step in determining what I was against, was to at least partially disassemble the keyboard.&lt;/p></description></item></channel></rss>