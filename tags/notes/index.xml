<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Notes on WhyNot.Fail</title><link>https://whynot.fail/tags/notes/</link><description>Recent content in Notes on WhyNot.Fail</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Wed, 28 Apr 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://whynot.fail/tags/notes/index.xml" rel="self" type="application/rss+xml"/><item><title>Clear nrf52 saved BT bonds</title><link>https://whynot.fail/notes/clear-nrf52-saved-bt-bonds/</link><pubDate>Wed, 28 Apr 2021 00:00:00 +0000</pubDate><guid>https://whynot.fail/notes/clear-nrf52-saved-bt-bonds/</guid><description>&lt;p>Often the nRF52 micros get stuck or misbehave and reach a weird state with the pairings. Often the solution is just to clear them so here’s adafruit’s code to do that and a &lt;a href="http://platform.io/">platform.io&lt;/a> ini to make it easy.&lt;/p>
&lt;p>&lt;code>platformio.ini&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-Bash" data-lang="Bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>env:clearbonds&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>platform &lt;span style="color:#f92672">=&lt;/span> nordicnrf52
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>board &lt;span style="color:#f92672">=&lt;/span> particle_xenon
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>framework &lt;span style="color:#f92672">=&lt;/span> arduino
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The board can be any nrf52 board, it can be any generic board that uses the same chip that you actually have. For example &lt;code>particle_xenon&lt;/code> uses nRF52840, so it can be used for any 52840 board. It might though not flash the correct LEDs, so just hook up the serial port.&lt;/p></description></item><item><title>MicroPython on Bluefruit NRF52832 with J-Link and openocd</title><link>https://whynot.fail/notes/micropython-on-nrf52832-with-openocd/</link><pubDate>Wed, 22 Apr 2020 00:00:00 +0000</pubDate><guid>https://whynot.fail/notes/micropython-on-nrf52832-with-openocd/</guid><description>&lt;p>First of all, lets flash Adafruit’s NRF52 bootloader for easier future flashing&lt;/p>
&lt;p>My J-Link was “Broken. No longer used” - or so the JLink tools said (AKA bought from e-bay). So I had to go to &lt;a href="http://openocd.org/">openocd&lt;/a>).&lt;/p>
&lt;p>Connect the J-Link (or any SWD capable debugger supported by openocd - even an FT232 breakout will do) to the target - I have a Bluefruit by Adafruit.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-Bash" data-lang="Bash">&lt;span style="display:flex;">&lt;span>pip3 install --user intelhex
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cd Adafruit_nRF52_Bootloader
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git clone https://github.com/adafruit/Adafruit_nRF52_Bootloader
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git submodule update --init
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>make BOARD&lt;span style="color:#f92672">=&lt;/span>feather_nrf52832 all
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>FIRMWARE&lt;span style="color:#f92672">=&lt;/span>lib/softdevice/s132_nrf52_6.1.1/s132_nrf52_6.1.1_softdevice.hex
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo openocd -f board/nordic_nrf52_dk.cfg -c init -c “reset init” -c halt -c “nrf5 mass_erase” -c “program $FIRMWARE verify” -c reset -c exit
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>FIRMWARE&lt;span style="color:#f92672">=&lt;/span>_build/build-feather_nrf52832/feather_nrf52832_bootloader-0.3.2-28-g79a6a0c-nosd.hex
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo openocd -f board/nordic_nrf52_dk.cfg -c init -c “reset init” -c halt -c “program $FIRMWARE verify” -c reset -c exi
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code class="language-callout" data-lang="callout">💡**NOTE**: `nrf5` command was missing from my package manager’s `openocd` and I needed to install the git version!
&lt;/code>&lt;/pre>&lt;p>Now the bootloader should be flash and we’re able to flash over serial from now on! Lets flash micropython (I advise not flashing master but a stable tag)&lt;/p></description></item></channel></rss>